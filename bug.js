In Next.js 15, a subtle issue can arise when using server components with `async/await` within a `useEffect` hook in a client component.  If the server component fetches data asynchronously and the client component depends on this data, a race condition might occur, leading to the client component rendering before the server component's data is available. This results in the client component displaying stale or incomplete data, or even causing unexpected errors.  The problem is exacerbated when dealing with dynamic routes, where the data fetching might take longer, leading to more noticeable issues.